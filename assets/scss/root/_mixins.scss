@function em($pxval, $base: 16) {
  @return ($pxval / $base) * 1em;
}


// Box-sizing
@mixin box-sizing($boxsize: border-box) {
  -moz-box-sizing: $boxsize;
  -webkit-box-sizing: $boxsize;
  box-sizing: $boxsize;
}
// eg: div { @include box-sizing(border-box); }



// Image replacement
@mixin ir {
  display: block;
  overflow: hidden;
  border: 0;
  background-color: transparent;
  background-repeat: no-repeat;
  text-align: left;
  text-indent: -999em;
  direction: ltr;
  *line-height: 0;
}
// eg: div { @include ir }


@mixin hide-icon-text() {
  text-indent: -9999px;
  i {
    text-indent: 0;
  }
}

// Visually Hidden
@mixin visuallyhidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  border: 0;
}
// eg: div { @include visuallyhidden; }
.visuallyhidden {
  @include visuallyhidden;
}
// use directly as a class


@mixin revert-visuallyhidden {
  position: static;
  overflow: auto;
  clip: auto;
  margin: inherit;
  padding: inherit;
  width: auto;
  height: auto;
  border: inherit;
}



// Clear fix
@mixin cf {
  zoom:1;
  &:before,
  &:after{
    display:table;
    content:"";
  }
  &:after{
    clear:both;
  }
}
// eg: div { @include cf; }



// Text Ellipsis
@mixin text_truncate {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
// eg: div{ @include text_truncate; }


//Media Queries
@mixin mq($point) {
  @media screen and (min-width: $point / $doc-font-size +em) {
    @content;
  }
}
@mixin mq-max($point) {
  @media screen and (max-width: $point / $doc-font-size +em) {
    @content;
  }
}

// Word Wrap
@mixin word_wrap {
  word-wrap: break-word;
}
